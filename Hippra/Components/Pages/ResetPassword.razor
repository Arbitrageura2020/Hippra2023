@page "/resetpassword"
@using Hippra.Models.DTO
@using Hippra.Models.Enums
@using Hippra.Models.ViewModel
@using Hippra.Services
@using System.Text
@using Microsoft.AspNetCore.WebUtilities
@inject ProfileService pService;
@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager
@layout LoginLayout
@inherits OwningComponentBase
<PageTitle>Forgot Password</PageTitle>

<div class="create-an-account">Reset Password</div>

<div class="center-container">
    <EditForm Model="PasswordModel" OnValidSubmit="SubmitForm">
        <DataAnnotationsValidator />
        <div class="form-wrapper">
            <input type="hidden" name="PasswordModel.Code" value="@PasswordModel.Code" />
            <input class="user-cred" type="text" placeholder="Email" @bind="@PasswordModel.Email" />
            <p class="validation-error"> <ValidationMessage For="() => PasswordModel.Email" /></p>
            <input class="user-cred" type="password" placeholder="Password" @bind="@PasswordModel.Password" />
            <p class="sub-txt">
                8+ characters, Uppercase, Lowercase, Number, Special characters.
            </p>
            <p class="validation-error"> <ValidationMessage For="() => PasswordModel.Password" /></p>

            <input class="user-cred"
                   type="password"
                   placeholder="Confirm Password" @bind="@PasswordModel.ConfirmPassword" />
            <p class="validation-error"> <ValidationMessage For="() => PasswordModel.ConfirmPassword" /></p>
            <button class="button" type="submit">Submit</button>
        </div>

    </EditForm>
</div>

<div class="h-logo">
    <svg class="h-color" width="241" height="196" viewBox="0 0 241 196" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M0 10.8737C0 4.90905 4.83532 0.0737305 10.8 0.0737305H25.6573C31.622 0.0737305 36.4573 4.90906 36.4573 10.8737V185.18C36.4573 191.145 31.622 195.98 25.6573 195.98H10.8C4.83533 195.98 0 191.145 0 185.18V10.8737Z" fill="#1DA39D" fill-opacity="0.1"></path>
        <path d="M236.93 79.1435H164.763C162.858 79.1435 161.314 77.5887 161.314 75.6713V3.47222C161.314 1.55478 159.77 0 157.865 0H128.305C126.401 0 124.857 1.55478 124.857 3.47222V75.6713C124.857 77.5887 123.312 79.1435 121.408 79.1435H49.2442C47.3397 79.1435 45.7954 80.6983 45.7954 82.6157V112.377C45.7954 114.294 47.3397 115.849 49.2442 115.849H121.412C123.316 115.849 124.86 117.404 124.86 119.321V192.438C124.86 194.356 126.405 195.91 128.309 195.91H157.869C159.773 195.91 161.318 194.356 161.318 192.438V119.321C161.318 117.404 162.862 115.849 164.766 115.849H236.934C238.838 115.849 240.383 114.294 240.383 112.377V82.6157C240.383 80.6983 238.838 79.1435 236.934 79.1435L236.93 79.1435Z" fill="#DA5810" fill-opacity="0.1"></path>
    </svg>
</div>


@code {

    private bool hasError { get; set; }
    private IList<String> ErrorMessages { get; set; }
    private ResetPasswordViewModel PasswordModel { get; set; } = new ResetPasswordViewModel();
    private bool Succeed { get; set; } = false;
    // [Parameter]
    [SupplyParameterFromQuery]
    public string? Code { get; set; }
    protected override void OnInitialized()
    {
        if (Code != null)
        {
            PasswordModel.Code = Encoding.UTF8.GetString(WebEncoders.Base64UrlDecode(Code));
        }
    }

    private async Task SubmitForm()
    {
        hasError = false;

        var result = await pService.PasswordReset(PasswordModel);
        if (result == true)
        {
            Succeed = true;
            NavigationManager.NavigateTo("/FTRZLogin");
        }
        else
        {
            // ErrorMessages = result.Item2;
            Succeed = false;
            hasError = true;
        }
    }
}
