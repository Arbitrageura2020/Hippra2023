@page "/viewcase/{caseId:int}"
@using Hippra.Models.Enums
@using Hippra.Models.ViewModel
@using System.Security.Claims
@using System.ComponentModel.DataAnnotations
@using Hippra.Models.DTO
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@using System.Text
@using System.Text.Encodings.Web
@using Microsoft.AspNetCore.Mvc.Rendering;
@using Hippra.Models.FTDesign
@using Hippra.Services
@using Hippra.Models.SQL
@using Hippra.Extensions
@using Hippra.Pages.Common
@using Hippra.Pages.FTDesign.Features
@using Hippra.Pages.FTDesign
@using Hippra.Pages.Home
@using Microsoft.AspNetCore.Http
@using static Hippra.Components.CaseComments
@inject IHttpContextAccessor httpContextAccessor
@inject IJSRuntime JSRuntime
@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager
@inject ProfileService pService
@inject IAuthorizationService AuthorizationService
@inject ICaseService caseService
@inject IFollowService followService;

<div class="case-layout @(CaseItem.Type==CaseType.AskForHelp?"orange":"") ">
    <div class="case-top">
        <div class="case-top-action">
            <FTBackBtn BackTitle="Back" UseRedirect="false"></FTBackBtn>
        </div>
    </div>
    @if (dataReady)
    {
        <section class="case-content no-pad">
            <div class="case-content-heading">
                <h3>
                    @CaseItem.Topic
                </h3>

                <div class="profile-tags">
                    <ul>
                        @if (CaseItem.Type == CaseType.ClinicalKnowledge)
                        {
                            <li class="knowledge-sharing-case">
                                Clinical Knowledge Sharing Case
                            </li>
                        }
                        @if (CaseItem.Type == CaseType.AskForHelp)
                        {
                            <li class="ask-for-help-case">Ask For Help Case</li>
                        }
                        @if (CaseItem.Tags != null)
                        {
                            @foreach (var tag in CaseItem.Tags)
                            {
                                <li><a @onclick="(e => { searchCasesContainTag(tag.Name); })">@tag.Name</a></li>
                            }
                        }
                    </ul>
                </div>
            </div>
            <div class="case-content-meta">
                <div class="case-profile">
                    <img src="@CaseItem.PosterImg" alt="">
                    <div class="case-profile-info">
                        <div>
                            <h4>@CaseItem.PosterName</h4>
                            @if (!isOwner)
                            {
                                @if (isFollowed)
                                {
                                    <p class="color-green" @onclick="@RemoveFromFollowerList">Followed</p>
                                }
                                else
                                {
                                    <p class="color-green" @onclick="@AddToFollowerList">Follow+</p>
                                }
                            }
                        </div>

                        <div class="case-content-date">
                            <p>Specialist in @CaseItem.PosterSpeciality</p>
                            <p>Last Updated: @CaseItem.DateLastUpdated.ToShortDateString()</p>
                        </div>
                    </div>
                </div>

                <!----------------------------------------------------------------------Edit - Start  -->

                <div class="case-content-actions">
                    @if (isOwner)
                    {
                        <a href="/editcase/@caseId">
                            <img src="/img/icons/new-edit.svg" alt="">
                            <span>Edit</span>
                        </a>
                    }
                    else
                    {
                        @if (CaseItem.LikedByCurrentUser)
                        {
                            <button>
                                <img src="/img/icons/thumbs-up-hollow.svg" alt="">
                                <span>Liked</span>
                            </button>
                        }
                        else
                        {
                            <button @onclick="Like">
                                <img src="/img/icons/thumbs-up-hollow.svg" alt="">
                                <span>Like</span>
                            </button>
                        }
                        <button>
                            <img src="/img/icons/comment.svg" alt="">
                            <span>Respond</span>
                        </button>
                    }


                </div>
                <!----------------------------------------------------------------------Edit - End  -->
            </div>
            <div class="case-main-content">
                <div class="case-main-left">
                    <div class="case-patient">
                        <div class="case-patient-info">
                            <h4>Patient Information:</h4>
                            <ul>
                                <!----------------------------------------------------------------------Edit - Start  -->
                                <li>
                                    <span>Age:</span> <span class="light-text"> @CaseItem.PatientAge </span>
                                </li>
                                <li>
                                    <span>Gender:</span>
                                    <span class="light-text"> Male </span>
                                </li>
                                <li>
                                    <span>Race:</span>
                                    <span class="light-text"> Asian </span>
                                </li>
                                <li>
                                    <span>Ethnicity:</span>
                                    <span class="light-text">
                                        Not Hispanic or Latino
                                    </span>
                                </li>
                                <!----------------------------------------------------------------------Edit - End  -->
                            </ul>
                        </div>
                        <div class="case-patient-lab">
                            <h6>Lab Values:</h6>
                            <p>
                                @CaseItem.LabValues
                            </p>
                        </div>
                    </div>
                </div>
                <div class="case-main-right">
                    <div class="case-informations">
                        <div class="case-info-title">
                            <h4>Case Overview</h4>
                            <hr>
                        </div>
                        <div class="case-info-desc">
                            <p>
                                @((MarkupString)CaseItem.Description)
                            </p>
                        </div>
                    </div>
                    <div class="case-informations">
                        <div class="case-info-title">
                            <h4>Current Stage of Disease</h4>
                            <hr>
                        </div>
                        <div class="case-info-desc">
                            <p>
                                @CaseItem.CurrentStageOfDisease
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <!-- Case Tabs Here -->
        <section class="case-tabs">
            <div class="case-tab-top">
                <div class="case-tab-left">
                    <button class="case-tab-btn active" data-target="tab-case-one">
                        Current Treatment Administered
                    </button>
                </div>
                <div class="case-tab-right">
                    <button class="case-tab-btn" data-target="tab-case-two">
                        Treatment Outcomes
                    </button>
                </div>
            </div>
            <!-- Current Treatment Administered Content -->
            <div class="case-tab-content tab-case-one active">
                <p>
                    @CaseItem.CurrentTreatmentAdministered
                </p>
            </div>
        </section>
        <section class="case-tabs">
            <div class="case-info-title">
                <h4>Relevant Files</h4>
                <hr>
            </div>
            <div class="relevant-files-container">
                @if (CaseItem.Files != null)
                {
                    @foreach (var document in CaseItem.Files)
                    {
                        <div class="relevant-file"> <a href="/Files/Download/@document.ID">@document.FileName</a></div>
                    }
                }
            </div>
        </section>
        <section class="case-tabs">
            <div class="case-content-meta">
                <div class="case-profile">
                    <img src="@CaseItem.PosterImg" alt="">
                    <div class="case-profile-info">
                        <div>
                            <h4>@CaseItem.PosterName</h4>
                            @if (!isOwner)
                            {
                                @if (isFollowed)
                                {
                                    <p class="color-green" @onclick="@RemoveFromFollowerList">Followed</p>
                                }
                                else
                                {
                                    <p class="color-green" @onclick="@AddToFollowerList">Follow+</p>
                                }
                            }

                        </div>

                        <div class="case-content-date">
                            <p>Specialist in @CaseItem.PosterSpeciality</p>
                            <p>Last Updated: @CaseItem.DateLastUpdated.ToShortDateString()</p>
                        </div>
                    </div>
                </div>

                <div class="case-content-actions">

                    @if (!isOwner)
                    {
                        @if (CaseItem.LikedByCurrentUser)
                        {
                            <button>
                                <img src="/img/icons/thumbs-up-hollow.svg" alt="">
                                <span>Liked</span>
                            </button>
                        }
                        else
                        {
                            <button @onclick="Like">
                                <img src="/img/icons/thumbs-up-hollow.svg" alt="">
                                <span>Like</span>
                            </button>
                        }
                    }
                </div>
            </div>
        </section>
    }
    @if (dataReady)
    {
        <CaseComments caseId="@CaseItem.ID" isOpened="true" />
    }

</div>

@code {
    [Parameter]
    public int caseId { get; set; } = -1;
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    private AuthenticationState authState { get; set; }
    private ClaimsPrincipal user { get; set; }

    private bool hasError { get; set; } = false;
    private int status { get; set; } = 0;

    private bool isOwner { get; set; } = false;
    private bool isFollowed = false;
    private string returnUrl { get; set; } = "/";

    private CaseViewModel CaseItem { get; set; } = new CaseViewModel();

    private int activeTab { get; set; } = 1;
    private bool dataReady = false;
    private string userId { get; set; } = "";


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        //if (firstRender)
        //{
        //   await JSRuntime.InvokeVoidAsync("handlePageScrollable");
        // await JSRuntime.InvokeVoidAsync("InitCasePage");
        //}
    }

    protected override async Task OnInitializedAsync()
    {
        authState = await authenticationStateTask;
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            try
            {
                userId = user.Claims.FirstOrDefault(s => s.Type == "UserId")?.Value;

                CaseItem = await caseService.GetCaseNoTracking(caseId, userId);

                if (CaseItem.PosterId == userId)
                {
                    isOwner = true;
                }

                isFollowed = await followService.CheckFollower(userId, CaseItem.PosterId);
                dataReady = true;

            }
            catch (FormatException e)
            {
                Console.WriteLine(e.Message);
            }

            returnUrl = returnUrl;


            StateHasChanged();
        }
        else
        {
            // shouldn't get here
        }


    }

    private async Task viewPage(int id)
    {
        NavigationManager.NavigateTo("/profile/" + id);
    }


    private async Task searchCasesContainTag(string tag)
    {
        NavigationManager.NavigateTo("/tagsearch/" + caseId + "/" + tag);
    }

    private async Task ToggleTab(int tab)
    {
        activeTab = tab;
        StateHasChanged();
    }

    private async Task Like()
    {
        if (!CaseItem.LikedByCurrentUser)
        {
            var result = await caseService.AddLike(userId, caseId);
            if (result)
                CaseItem.LikedByCurrentUser = true;
        }
    }

    private async Task UnLike()
    {
        if (CaseItem.LikedByCurrentUser)
        {
            var result = await caseService.RemoveLike(userId, caseId);
            if (result)
                CaseItem.LikedByCurrentUser = false;
        }
    }

    private async Task AddToFollowerList()
    {
        await followService.AddFollower(CaseItem.PosterId, userId);
        isFollowed = true;
        // await addToHistory("followed");
        // await Notify(-1);
        StateHasChanged();
    }

    private async Task RemoveFromFollowerList()
    {
        await followService.RemoveFollower(CaseItem.PosterId, userId);
        isFollowed = false;
        // await addToHistory("unfollowed");
        StateHasChanged();
    }
}
