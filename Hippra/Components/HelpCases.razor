@using Hippra.Extensions
@using Hippra.Models.DTO
@using Hippra.Models.Enums
@using Hippra.Models.SQL
@using Hippra.Models.ViewModel
@using Hippra.Services
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Identity
@inject IJSRuntime JSRuntime
@inject HippraService hService
@inject UserManager<AppUser> UserManager
@inject IHttpContextAccessor httpContextAccessor
<div>
    <!-- Ask-4 Help Loop Started -->
    @if (IsLoading)
    {
        <p><em>Loading ...</em></p>
    }
    else
    {
        foreach (var item in SearchResults)
        {

            <div class="card">
                <div class="card-header">
                    <div class="profile-info">
                        @* href=@($"/viewcase/{c.ID}") *@
                        <div>
                            @if (item.User != null)
                            {
                                <img src="@item.User.ProfileUrl" alt="@item.User.FirstName" class="profile-img">
                            }
                            else
                            {
                                <img src="/img/hippra/blank-profile.png" class="profile-img" />
                            }
                            <p class="profile-name">@item.User.FullName</p>
                            <p class="profile-title">@EnumsHelper.GetDisplayName(@item.User.MedicalSpecialty) · Posted 2 hours ago</p>
                        </div>
                    </div>
                    <div class="more-options">...</div>
                </div>
                <div class="card-body">
                    <h4 class="card-title">@item.Topic</h4>
                    <p class="card-text">   @item.Description.Left(200) ...</p>
                </div>
                <div class="card-footer">
                    <div class="tags">
                        @if (@item.Type == CaseType.ClinicalKnowledge)
                        {
                            <span class="tag">Clinical Knowledge Sharing Case</span>
                        }
                        @if (@item.Type == CaseType.AskForHelp)
                        {
                            <span class="tag">Ask For Help Case</span>
                        }
                        @if (@item.Tags != null)
                        {
                            @foreach (var tag in @item.Tags)
                            {
                                <span class="tag">@tag.Name</span>
                            }
                        }

                    </div>
                    <div class="card-interactions">
                        <span class="likes"><i class="fas fa-thumbs-up"></i> @item.NrOfLikes Likes</span>
                        <span class="comments"><i class="fas fa-comments"></i> 20 Comments</span>
                    </div>
                </div>
            </div>


        }
    }
    else
    {
    <div>No Case Found. Try Modify Search Criteria or Filter.</div>
    }


</div>

@code {
    private bool IsLoading = false;
    private string searchString { get; set; } = "";
    private IList<CaseViewModel> SearchResults { get; set; } = new List<CaseViewModel>();

    private string userId = "";
    protected override async Task OnInitializedAsync()
    {
        // var user = httpContextAccessor.HttpContext.User;
        // var userInfo = await UserManager.GetUserAsync(httpContextAccessor.HttpContext.User);
        // userId = userInfo!.Id.ToString();

        await GetSearchResults();
    }

    // protected override async Task OnAfterRenderAsync(bool firstRender)
    // {
    //     //if (firstRender)
    //     //{
    //     await JSRuntime.InvokeVoidAsync("handlePageScrollable");
    //     await JSRuntime.InvokeVoidAsync("InitCasePage");
    //     //}
    // }


    private async Task GetSearchResults()
    {


        SearchResults = await hService.GetAllCases(CaseType.AskForHelp);

        IsLoading = false;
    }
}
