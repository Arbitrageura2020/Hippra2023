<div class="ft-main-px">
    @if (centerTitle)
    {
        <div class="ft-subheader-bar text-dark d-flex justify-content-between">

            @if (HasBackBtn)
            {
                <FTBackBtn BackTitle="@BackTitle" UseRedirect="@UseRedirect" returnUrl="@returnUrl"></FTBackBtn>
            }
            <div class="ms-fontWeight-semibold ms-fontSize-20 ">
                @Title
            </div>

            <div> </div>

        </div>
    }
    else
    {
        <div class="ft-subheader-bar text-dark">
            @if (HasBackBtn)
            {
                <FTBackBtn BackTitle="@BackTitle" UseRedirect="@UseRedirect" returnUrl="@returnUrl"></FTBackBtn>
            }
            <div class="ms-fontWeight-semibold ms-fontSize-20 ">
                @Title
            </div>
            @if (HasCustomization)
            {
                if (HasSeparator)
                {
                    <div class="mx-2"> | </div>
                }

                @ChildContent
            }



        </div>
    }

</div>

@code {
    [Parameter]
    public string Title { get; set; }
    [Parameter]
    public bool HasSeparator { get; set; } = true;
    [Parameter]
    public RenderFragment ChildContent { get; set; }

    //+ v2
    // for center
    [Parameter]
    public bool centerTitle { get; set; } = false;

    // for backBtn
    [Parameter]
    public string BackTitle { get; set; } = "";
    [Parameter]
    public bool HasBackBtn { get; set; } = false;
    [Parameter]
    public bool UseRedirect { get; set; } = true;
    [Parameter]
    public string returnUrl { get; set; } = "/";

    //- v2

    public bool HasCustomization { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        if (ChildContent == null)
        {
            HasCustomization = false;
        }
        else
        {
            HasCustomization = true;
        }
    }
}
