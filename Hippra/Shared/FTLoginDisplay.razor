@using Hippra.Pages.FTDesign.Components
@using Microsoft.AspNetCore.Identity
@using Hippra.Models.SQL
@using Microsoft.Extensions.Options
@using Hippra
@*@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager*@
@inject IOptions<AppSettings> settings
@using System.Security.Claims
@inject Microsoft.AspNetCore.Components.NavigationManager  NavigationManager
<AuthorizeView>
    <Authorized>
        <ul class="navbar-nav">
            @if (isAdmin)
            {
                <li class="nav-item">
                    <a class="btn @BtnCustomCssClass @TextColorCustomCssClass ft-btn-round" href="/Dashboard"><i class="ms-Icon ms-Icon--Admin" aria-hidden="true"></i></a>
                </li>
            }
            @if (HasSearchBar)
            {
                <FTTopbarSearch />
            }
            @if (HasNotification)
            {
                <FTTopbarNotification />
            }
            @if (HasQuickAction)
            {
                <FTTopbarQuickAction />
            }

            <FTTopbarAccount />

            @if (HasContactsPanel)
            {
                <FTTopbarPanel />
            }
            <button class="nav-btn" @onclick="@viewNotificationPage"><span class="far fa-bell"></span></button>
            <button class="nav-btn" @onclick="@viewPage"><i class="ms-Icon ms-Icon--Contact" aria-hidden="true"></i></button>
        </ul>
        @*@{

            if (@isAdmin)
            {
                // for admin
                <li class="nav-item">
                    <a class="nav-link text-light" href="/Dashboard/Index" title="Manage"><span style="font-size: 1.5em;"><i class="fas fa-tachometer-alt" style="width:24px"></i></span></a>
                </li>
            }
        }*@
        @*<a href="Identity/Account/Manage">Hello, @context.User.Identity.Name!</a>
        <form method="post" action="Identity/Account/LogOut">
            <button type="submit" class="nav-link btn btn-link">Log out</button>
        </form>*@
    </Authorized>
    <NotAuthorized>
        <ul class="navbar-nav">
            <li class="nav-item">
                <a class="nav-link @TextColorCustomCssClass" href="FTRegister">Register</a>
            </li>
            <li class="nav-item">
                <a class="nav-link @TextColorCustomCssClass" href="FTRZLogin">Login</a>
            </li>
        </ul>
    </NotAuthorized>
</AuthorizeView>


@code{
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    private AuthenticationState authState { get; set; }
    private ClaimsPrincipal user { get; set; }
    private bool isAdmin { get; set; } = false;

    [CascadingParameter(Name = "FT_THEME")]
    public ThemeOption themeOption { get; set; } = ThemeOption.LIGHT;
    private string BtnCustomCssClass { get; set; } = "";
    private string TextColorCustomCssClass { get; set; } = "";
    private string BackgroundColorCssClass { get; set; } = "";

    [Parameter]
    public bool HasSearchBar { get; set; }
    [Parameter]
    public bool HasNotification { get; set; }
    [Parameter]
    public bool HasQuickAction { get; set; }
    [Parameter]
    public bool HasContactsPanel { get; set; }


    protected override async Task OnInitializedAsync()
    {
        authState = await authenticationStateTask;
        user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            //var usr = await UserManager.GetUserAsync(user);
            //if (usr.NormalizedEmail == settings.Value.FTManagerUsr.ToUpper())
            //{
            //    isAdmin = true;
            //}
        }
        switch (themeOption)
        {
            case ThemeOption.LIGHT:
                BtnCustomCssClass = "btn-light ";
                TextColorCustomCssClass = "text-dark";
                BackgroundColorCssClass = "ft-sidebar-bottom-bg-light";
                break;
            case ThemeOption.FT_LIGHT:
                BtnCustomCssClass = "ft-btn-light";
                TextColorCustomCssClass = "text-dark";
                BackgroundColorCssClass = "ft-sidebar-bottom-bg-light";
                break;
            case ThemeOption.FT_DARK:
                BtnCustomCssClass = "ft-btn-dark";
                TextColorCustomCssClass = "text-white";
                BackgroundColorCssClass = "ft-sidebar-bottom-bg-dark";

                break;
            default:
            case ThemeOption.DARK:
                BtnCustomCssClass = "btn-dark ";
                TextColorCustomCssClass = "text-white";
                BackgroundColorCssClass = "ft-sidebar-bottom-bg-dark";
                break;
        }


    }
    private async Task viewPage()
    {
        NavigationManager.NavigateTo("/PersonalPage/-1" );

    }
    private async Task viewNotificationPage()
    {
        @*NavigationManager.NavigateTo("/FTProfile/" + -1 +"/"+ 2);*@
        NavigationManager.NavigateTo("/Notification");
    }

}