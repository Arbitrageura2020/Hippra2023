@page "/viewcase/{caseId:int}"
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@using System.Text
@using System.Text.Encodings.Web
@using Microsoft.AspNetCore.Mvc.Rendering;
@using Hippra.Models.FTDesign
@using Hippra.Services
@using Hippra.Models.SQL
@using Hippra.Models.Enums
@using Hippra.Extensions
@using Hippra.Pages.Common
@using Hippra.Pages.FTDesign.Features
@using Hippra.Pages.FTDesign
@using Hippra.Pages.Home
@using Hippra.Pages.MCase
@using System.Security.Claims
@using Microsoft.AspNetCore.Http
@using Hippra.Pages.Common 
@inject IHttpContextAccessor httpContextAccessor
@inject IJSRuntime JSRuntime
@*@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager*@
@inject Microsoft.AspNetCore.Components.NavigationManager  NavigationManager
@inject ProfileService pService
@inject HippraService hService 
@inject IAuthorizationService AuthorizationService

<AuthorizeView>
    <Authorized Context="DetailCaseContext">
        <FTSubHeaderBar Title="Back"
                        HasBackBtn="true" returnUrl="@returnUrl">
        </FTSubHeaderBar>

        <div class="ft-main-px">
            <div class="card">
                <div class="card-body">
                    <div class="">


                        <div class="row">
                            <div class="col">
                                <div class="lead">Case Summary</div>
                            </div>
                            <div class="col text-right">
                                @if (pCase.PosterID == userId)
                                {
                                    <button type="button" class="btn btn-secondary" @onclick="@EditMode">Edit Case</button>
                                }
                            </div>
                        </div>
                        <div class="py-5 row justify-content-center">
                            <div class="col-md-2">

                            </div>
                            <div class="col-md-8">

                                <h4 class="" id="vmTitle">@pCase.Topic</h4>
                                <div class="" id="vmCategory"><small>@pCase.ParsedCategory · <span class="text-black-50">@pCase.ParsedSubCategory</span></small></div>

                                <hr />
                                <div class=""> Description: @((MarkupString) @pCase.Description)</div>
                            </div>
                            <div class="col-md-2">

                            </div>
                        </div>
                        <hr />
                        <div class="lead">Patient Information</div>
                        <div class="py-5 row justify-content-center">
                            <div class="col-md-2">

                            </div>
                            <div class="col-md-8" id="vmContent">
                                <div class="">Age: @pCase.PatientAge</div>
                                <div class="">Gender: @pCase.ParsedGender</div>
                                <div class="">Race: @pCase.ParsedRace</div>
                                <div class="">Ethnicity: @pCase.ParsedEthnicity</div>
                                <br />
                                <div class="">Lab Values: @pCase.LabValues</div>
                                <div class="">Current Stage of Disease: @pCase.CurrentStageOfDisease</div>
                                <div class="">Current Treatment Administered: @pCase.CurrentTreatmentAdministered </div>
                                <div class="">Treatment Outcomes: @pCase.TreatmentOutcomes</div>
                            </div>
                            <div class="col-md-2">

                            </div>
                        </div>
                        <div class="lead">Case Information</div>
                        <div class="py-5 row justify-content-center">
                            <div class="col-md-2">

                            </div>
                            <div class="col-md-8">
                                <div class=""><strong>Created By:</strong> @pCase.PosterName <span class="text-black-50"> (@pCase.PosterSpecialty) </span></div>
                                <div><strong>Case Status:</strong> @pCase.ParsedStatus</div>
                                <div><strong>Priority:</strong> @pCase.Priority</div>
                                <div><strong>Date Created:</strong> @pCase.DateCreated.ToShortDateString() </div>
                                <div><strong>Last Updated:</strong> @pCase.DateLastUpdated.ToShortDateString()</div>
                            </div>
                            <div class="col-md-2">

                            </div>
                        </div>
                        <div class="lead">Tags</div>
                        <div class="py-5 row ">
                            <div class="col-md-2">
                               
                            </div>
                            
                            <div class="col-md-8">
                                @if (pCase.Tags != null)
                                {
                                    foreach (var tag in pCase.Tags)
                                    {
                                        <div class="around-tag-button">
                                            <button class="tag-button" @onclick="(e => { searchCasesContainTag(tag.Tag); })">
                                                @tag.Tag
                                            </button>
                                        </div>
                                    }
                                }
                            </div>
                        </div>
                            @if (!string.IsNullOrWhiteSpace(@pCase.imgUrl))
                            {
                                <div class="lead">Images</div>
                                @foreach (string url in imgUrls)
                                {
                                    <div class="py-5 row justify-content-center">
                                        <div class="col-md-2">

                                    </div>
                                    <div class="col-md-8">
                                        <label class="label-img">
                                            <input type="checkbox">
                                            <img id="caseImg" src="@url" width="10%" height="auto" />
                                        </label>
                                    </div>
                                    <div class="col-md-2">

                                    </div>
                                </div>
                            }
                        }


                        <div class="pb-5 row justify-content-center">
                            <div class="col-md-8" id="vmf">
                                @if(dataReady){
                                    <Comments postId="@pCase.ID" CommentList="@pCase.Comments" isOpened="true" />
                                }
                                
                            </div>
                        </div>

                    </div>

                </div>
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="ft-main-px">
            <div class="card">
                <div class="card-body">
                    <div class="row">
                        <div class="offset-md-3 col-md-6 offset-md-3 text-center">
                            <br /><br />
                            <div class="mb-3 ms-fontWeight-semibold ms-fontSize-24 ">Need To Sign In!</div>
                            <br /><br />
                        </div>
                    </div>
                </div>
            </div>

        </div>


    </NotAuthorized>
</AuthorizeView>


@code {
    [Parameter]
    public int caseId { get; set; } = -1;
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    private AuthenticationState authState { get; set; }
    private ClaimsPrincipal user { get; set; }
    @*private AppUser userInfo { get; set; } = new AppUser();*@

    private bool hasError { get; set; } = false;
    private int status { get; set; } = 0;

    private bool isOwner { get; set; } = false;
    private string returnUrl { get; set; } = "/";
    private Case InputModel { get; set; } = new Case();

    private FilterModel filters { get; set; } = new FilterModel();
    public class FilterModel
    {
        public bool showClosed { get; set; } = false;
        public string SubCategory { get; set; } = "-1";
    }

    private ParsedCase pCase { get; set; } = new ParsedCase();
    public class ParsedCase : Case
    {
        public string Priority { get; set; } = "";
        public string ParsedCategory { get; set; } = "";
        public string ParsedSubCategory { get; set; } = "";
        public string ParsedGender { get; set; } = "";
        public string ParsedRace { get; set; } = "";
        public string ParsedEthnicity { get; set; } = "";
        public string ParsedStatus { get; set; } = "";


    }
    private List<SelectListItem> specialtyList { get; set; }

    //private List<SelectListItem> CategoryList { get; set; } = new List<SelectListItem>();
    private List<SelectListItem> SubCategoryList { get; set; } = new List<SelectListItem>();
    private List<SelectListItem> GenderList { get; set; } = new List<SelectListItem>();
    private List<SelectListItem> RaceList { get; set; } = new List<SelectListItem>();
    private List<SelectListItem> EthnicityList { get; set; } = new List<SelectListItem>();
    private List<SelectListItem> SubCategoryFilterList { get; set; } = new List<SelectListItem>(){
                new SelectListItem { Value = "-1", Text = "No Filters" }
                };

    private string bCategory { get; set; } = "0";
    private string bSubCategory { get; set; } = "0";
    private string bGender { get; set; } = "0";
    private string bRace { get; set; } = "6";
    private string bEthnicity { get; set; } = "3";

    private string debug { get; set; } = "";

    private PriorityModel priorityRadio = new PriorityModel();
    public class PriorityModel
    {
        [Range(0, 2)]
        public int Priority { get; set; }
    }

    private string[] imgUrls;

    private bool dataReady = false;
    private int userId = -1;

    protected override async Task OnInitializedAsync()
    {
        authState = await authenticationStateTask;
        user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            @*userInfo = await UserManager.GetUserAsync(user);*@
             try
            {
              
                userId = Int32.Parse( user.Claims.FirstOrDefault(s => s.Type == "PublicId")?.Value );
           
            }
            catch (FormatException e)
            {
                Console.WriteLine(e.Message);
            }

            await PopulateLists();
            returnUrl = returnUrl;

            var tCase = await hService.GetCaseNoTracking(caseId);
            if (tCase == null)
            {
                // didn't find it, should flag for error
                return;
            }
            await PopulateModel(tCase);
            pCase.Comments = await hService.GetCommentsNoTracking(caseId);
            pCase.Tags = await hService.GetTagsNoTracking(pCase.ID);
            pCase.imgUrl = tCase.imgUrl;
            //deserialize
            if (!string.IsNullOrWhiteSpace(@pCase.imgUrl))
            {
                imgUrls = @pCase.imgUrl.Split(' ');
            }
        }
        else
        {
            // shouldn't get here
        }
        dataReady = true;
        StateHasChanged();

    }

    private async Task EditMode()
    {
        NavigationManager.NavigateTo("/editcase/"+ caseId);
    }


    #region PopulateData
    // POPULATE MODELS

    private async Task PopulateModel(Case tCase)
    {
        pCase = new ParsedCase();
        pCase.ID = tCase.ID;

        // TODO: fill the rest
        pCase.DateCreated = tCase.DateCreated;
        pCase.DateLastUpdated = tCase.DateLastUpdated;
        pCase.Description = tCase.Description;
        pCase.Topic = tCase.Topic;
        pCase.PosterID = tCase.PosterID;
        pCase.PosterName = tCase.PosterName;
        pCase.Race = tCase.Race;
        pCase.Gender = tCase.Gender;
        pCase.Ethnicity = tCase.Ethnicity;
        pCase.ResponseNeeded = tCase.ResponseNeeded;
        pCase.MedicalCategory = tCase.MedicalCategory;
        pCase.PosterSpecialty = tCase.PosterSpecialty;

        pCase.PatientAge = tCase.PatientAge;
        pCase.CurrentStageOfDisease = tCase.CurrentStageOfDisease;
        pCase.CurrentTreatmentAdministered = tCase.CurrentTreatmentAdministered;
        pCase.TreatmentOutcomes = tCase.TreatmentOutcomes;
        pCase.LabValues = tCase.LabValues;
        pCase.ParsedCategory = ParseCategoryFromSub(tCase.MedicalCategory);
        pCase.ParsedSubCategory = ParseSubCategory(tCase.MedicalCategory);
        pCase.ParsedGender = ParseGender(tCase.Gender);
        pCase.ParsedEthnicity = ParseEthnicity(tCase.Ethnicity);
        pCase.Priority = ParsePriority(tCase.ResponseNeeded);
        pCase.ParsedRace = ParseRace(tCase.Race);
        pCase.Status = tCase.Status;
        pCase.ParsedStatus = ParseStatus(tCase.Status);

        priorityRadio = new PriorityModel();
        priorityRadio.Priority = tCase.ResponseNeeded;
        bCategory = ParseCategoryValueFromSub(tCase.MedicalCategory);
        bSubCategory = tCase.MedicalCategory.ToString();
        await SwitchSubCategory(bCategory);
        bGender = tCase.Gender.ToString();
        bEthnicity = tCase.Ethnicity.ToString();
        bRace = tCase.Race.ToString();

    }
    private async Task searchCasesContainTag(string tag)
    {
        NavigationManager.NavigateTo("/tagsearch/" + caseId + "/" +tag);
    }
    private async Task UpdateSubCategoryFilter(ChangeEventArgs e)
    {
        var selectedCategory = e.Value.ToString();
        filters.SubCategory = "-1";
        switch (selectedCategory)
        {
            case "0":
                SubCategoryFilterList = new List<SelectListItem> {
                    new SelectListItem { Value = "-1", Text = "No Filters" },
                new SelectListItem { Value = "0", Text = "Diseases & Disorders of the Nervous System" },
                new SelectListItem { Value = "1", Text = "Diseases & Disorders of the Eye" },
                new SelectListItem { Value = "2", Text = "Diseases & Disorders of the Ear, Nose, Mouth & Throat" },
                new SelectListItem { Value = "3", Text = "Diseases & Disorders of the Respiratory System" },
                new SelectListItem { Value = "4", Text = "Diseases & Disorders of the Circulatory System" },
                new SelectListItem { Value = "5", Text = "Diseases & Disorders of the Digestive System" },
                new SelectListItem { Value = "6", Text = "Diseases & Disorders of the Hepatobiliary System & Pancreas" },
                new SelectListItem { Value = "7", Text = "Diseases & Disorders of the Musculoskeletal System & Connective Tissue" },
                new SelectListItem { Value = "8", Text = "Diseases & Disorders of the Skin, Subcutaneous Tissue & Breast" },
                new SelectListItem { Value = "9", Text = "Endocrine, Nutritional & Metabolic Diseases & Disorders" },

                new SelectListItem { Value = "10", Text = "Diseases & Disorders of the Kidney & Urinary Tract" },
                new SelectListItem { Value = "11", Text = "Diseases & Disorders of the Male Reproductive System" },
                new SelectListItem { Value = "12", Text = "Diseases & Disorders of the Female Reproductive System" },
                new SelectListItem { Value = "13", Text = "Pregnancy, Childbirth & the Puerperium" },
                new SelectListItem { Value = "14", Text = "Newborns & Other Neonates with Conditions Originating in Perinatal Period" },
                new SelectListItem { Value = "15", Text = "Diseases & Disorders of the Blood, Blood Forming Organs, Immunologic Disorders" },
                new SelectListItem { Value = "16", Text = "Myeloproliferative Diseases & Disorders, Poorly Differentiated Neoplasms" },
                new SelectListItem { Value = "17", Text = "Infectious & Parasitic Diseases, Systemic or Unspecified Sites" },
                new SelectListItem { Value = "18", Text = "Mental Diseases & Disorders" },
                new SelectListItem { Value = "19", Text = "Alcohol/Drug Use & Alcohol/Drug Induced Organic Mental Disorders" },

                new SelectListItem { Value = "20", Text = "Injuries, Poisonings & Toxic Effects of Drugs" },
                new SelectListItem { Value = "21", Text = "Burns" },
                new SelectListItem { Value = "22", Text = "Factors Influencing Health Status & Other Contacts with Health Services" },
                new SelectListItem { Value = "23", Text = "Multiple Significant Trauma" },
                new SelectListItem { Value = "24", Text = "Human Immunodeficiency Virus Infections" },
                new SelectListItem { Value = "25", Text = "Others" },

        };
                break;
            case "1":
                SubCategoryFilterList = new List<SelectListItem> {

                    new SelectListItem { Value = "-1", Text = "No Filters" },
                new SelectListItem { Value = "26", Text = "Allegy and Immunology" },
                new SelectListItem { Value = "27", Text = "Anesthesiology" },
                new SelectListItem { Value = "28", Text = "Colon and Rectal Surgery" },
                new SelectListItem { Value = "29", Text = "Dermatology" },

                new SelectListItem { Value = "30", Text = "Emergency Medicine" },
                new SelectListItem { Value = "31", Text = "Family Medicine" },
                new SelectListItem { Value = "32", Text = "Internal Medicine" },
                new SelectListItem { Value = "33", Text = "Medical Genetics" },
                new SelectListItem { Value = "34", Text = "Neurology" },
                new SelectListItem { Value = "35", Text = "Neurosurgery" },
                new SelectListItem { Value = "36", Text = "Nuclear Medicine" },
                new SelectListItem { Value = "37", Text = "Obstetrics and Gynecology" },
                new SelectListItem { Value = "38", Text = "Ophthalmology" },
                new SelectListItem { Value = "39", Text = "OrthopedicSurgery" },

                new SelectListItem { Value = "40", Text = "Otolaryngology" },
                new SelectListItem { Value = "41", Text = "Anatomic Pathology and Clinical Pathology" },
                new SelectListItem { Value = "42", Text = "Pediatrics" },
                new SelectListItem { Value = "43", Text = "Physical Medicine and Rehibilitation" },
                new SelectListItem { Value = "44", Text = "Plastic Surgery" },
                new SelectListItem { Value = "45", Text = "Public Health and General Preventive" },
                new SelectListItem { Value = "46", Text = "Psychiatry" },
                new SelectListItem { Value = "47", Text = "Radiology" },
                new SelectListItem { Value = "48", Text = "Hospice and Palliative Medicine" },
                new SelectListItem { Value = "49", Text = "Medical Nuclear Physics" },

                new SelectListItem { Value = "50", Text = "Surgery" },
                new SelectListItem { Value = "51", Text = "Vascular Surgery" },
                new SelectListItem { Value = "52", Text = "Thoracic Surgery" },
                new SelectListItem { Value = "53", Text = "Urology" },
                new SelectListItem { Value = "54", Text = "Others" },


        };
                break;
            case "2":
                SubCategoryFilterList = new List<SelectListItem> {

                    new SelectListItem { Value = "-1", Text = "No Filters" },
                new SelectListItem { Value = "55", Text = "General Surgery" },
                new SelectListItem { Value = "56", Text = "Thoracic Surgery" },
                new SelectListItem { Value = "57", Text = "Colon and Rectal Surgery" },
                new SelectListItem { Value = "58", Text = "Obstetrics and Gynecology" },
                new SelectListItem { Value = "59", Text = "Gynecologic Oncology" },

                new SelectListItem { Value = "60", Text = "Neurological Surgery" },
                new SelectListItem { Value = "61", Text = "Ophthalmic Surgery" },
                new SelectListItem { Value = "62", Text = "Oral and Maxillofacial Surgery" },
                new SelectListItem { Value = "63", Text = "Orthopaedic Surgery" },
                new SelectListItem { Value = "64", Text = "Otolaryngology" },
                new SelectListItem { Value = "65", Text = "Pediatric Surgery" },
                new SelectListItem { Value = "66", Text = "Plastic and Maxillofacial Surgery" },
                new SelectListItem { Value = "67", Text = "Urology" },
                new SelectListItem { Value = "68", Text = "Vascular Surgery" },
                new SelectListItem { Value = "69", Text = "Others" }
                };
                break;
            default:

                SubCategoryFilterList = new List<SelectListItem> {
                    new SelectListItem { Value = "-1", Text = "No Filters" }
                };
                break;
        }
    }

    private async Task UpdateSubCategory(ChangeEventArgs e)
    {
        var selectedCategory = e.Value.ToString();

        await SwitchSubCategory(selectedCategory);
    }

    private async Task SwitchSubCategory(string selectedCategory)
    {
        switch (selectedCategory)
        {
            case "0":
                SubCategoryList = new List<SelectListItem> {
                new SelectListItem { Value = "0", Text = "Diseases & Disorders of the Nervous System" },
                new SelectListItem { Value = "1", Text = "Diseases & Disorders of the Eye" },
                new SelectListItem { Value = "2", Text = "Diseases & Disorders of the Ear, Nose, Mouth & Throat" },
                new SelectListItem { Value = "3", Text = "Diseases & Disorders of the Respiratory System" },
                new SelectListItem { Value = "4", Text = "Diseases & Disorders of the Circulatory System" },
                new SelectListItem { Value = "5", Text = "Diseases & Disorders of the Digestive System" },
                new SelectListItem { Value = "6", Text = "Diseases & Disorders of the Hepatobiliary System & Pancreas" },
                new SelectListItem { Value = "7", Text = "Diseases & Disorders of the Musculoskeletal System & Connective Tissue" },
                new SelectListItem { Value = "8", Text = "Diseases & Disorders of the Skin, Subcutaneous Tissue & Breast" },
                new SelectListItem { Value = "9", Text = "Endocrine, Nutritional & Metabolic Diseases & Disorders" },

                new SelectListItem { Value = "10", Text = "Diseases & Disorders of the Kidney & Urinary Tract" },
                new SelectListItem { Value = "11", Text = "Diseases & Disorders of the Male Reproductive System" },
                new SelectListItem { Value = "12", Text = "Diseases & Disorders of the Female Reproductive System" },
                new SelectListItem { Value = "13", Text = "Pregnancy, Childbirth & the Puerperium" },
                new SelectListItem { Value = "14", Text = "Newborns & Other Neonates with Conditions Originating in Perinatal Period" },
                new SelectListItem { Value = "15", Text = "Diseases & Disorders of the Blood, Blood Forming Organs, Immunologic Disorders" },
                new SelectListItem { Value = "16", Text = "Myeloproliferative Diseases & Disorders, Poorly Differentiated Neoplasms" },
                new SelectListItem { Value = "17", Text = "Infectious & Parasitic Diseases, Systemic or Unspecified Sites" },
                new SelectListItem { Value = "18", Text = "Mental Diseases & Disorders" },
                new SelectListItem { Value = "19", Text = "Alcohol/Drug Use & Alcohol/Drug Induced Organic Mental Disorders" },

                new SelectListItem { Value = "20", Text = "Injuries, Poisonings & Toxic Effects of Drugs" },
                new SelectListItem { Value = "21", Text = "Burns" },
                new SelectListItem { Value = "22", Text = "Factors Influencing Health Status & Other Contacts with Health Services" },
                new SelectListItem { Value = "23", Text = "Multiple Significant Trauma" },
                new SelectListItem { Value = "24", Text = "Human Immunodeficiency Virus Infections" },
                new SelectListItem { Value = "25", Text = "Others" },

        };
                break;
            case "1":
                SubCategoryList = new List<SelectListItem> {


                new SelectListItem { Value = "26", Text = "Allegy and Immunology" },
                new SelectListItem { Value = "27", Text = "Anesthesiology" },
                new SelectListItem { Value = "28", Text = "Colon and Rectal Surgery" },
                new SelectListItem { Value = "29", Text = "Dermatology" },

                new SelectListItem { Value = "30", Text = "Emergency Medicine" },
                new SelectListItem { Value = "31", Text = "Family Medicine" },
                new SelectListItem { Value = "32", Text = "Internal Medicine" },
                new SelectListItem { Value = "33", Text = "Medical Genetics" },
                new SelectListItem { Value = "34", Text = "Neurology" },
                new SelectListItem { Value = "35", Text = "Neurosurgery" },
                new SelectListItem { Value = "36", Text = "Nuclear Medicine" },
                new SelectListItem { Value = "37", Text = "Obstetrics and Gynecology" },
                new SelectListItem { Value = "38", Text = "Ophthalmology" },
                new SelectListItem { Value = "39", Text = "OrthopedicSurgery" },

                new SelectListItem { Value = "40", Text = "Otolaryngology" },
                new SelectListItem { Value = "41", Text = "Anatomic Pathology and Clinical Pathology" },
                new SelectListItem { Value = "42", Text = "Pediatrics" },
                new SelectListItem { Value = "43", Text = "Physical Medicine and Rehibilitation" },
                new SelectListItem { Value = "44", Text = "Plastic Surgery" },
                new SelectListItem { Value = "45", Text = "Public Health and General Preventive" },
                new SelectListItem { Value = "46", Text = "Psychiatry" },
                new SelectListItem { Value = "47", Text = "Radiology" },
                new SelectListItem { Value = "48", Text = "Hospice and Palliative Medicine" },
                new SelectListItem { Value = "49", Text = "Medical Nuclear Physics" },

                new SelectListItem { Value = "50", Text = "Surgery" },
                new SelectListItem { Value = "51", Text = "Vascular Surgery" },
                new SelectListItem { Value = "52", Text = "Thoracic Surgery" },
                new SelectListItem { Value = "53", Text = "Urology" },
                new SelectListItem { Value = "54", Text = "Others" },


        };
                break;
            default:
                SubCategoryList = new List<SelectListItem> {


                new SelectListItem { Value = "55", Text = "General Surgery" },
                new SelectListItem { Value = "56", Text = "Thoracic Surgery" },
                new SelectListItem { Value = "57", Text = "Colon and Rectal Surgery" },
                new SelectListItem { Value = "58", Text = "Obstetrics and Gynecology" },
                new SelectListItem { Value = "59", Text = "Gynecologic Oncology" },

                new SelectListItem { Value = "60", Text = "Neurological Surgery" },
                new SelectListItem { Value = "61", Text = "Ophthalmic Surgery" },
                new SelectListItem { Value = "62", Text = "Oral and Maxillofacial Surgery" },
                new SelectListItem { Value = "63", Text = "Orthopaedic Surgery" },
                new SelectListItem { Value = "64", Text = "Otolaryngology" },
                new SelectListItem { Value = "65", Text = "Pediatric Surgery" },
                new SelectListItem { Value = "66", Text = "Plastic and Maxillofacial Surgery" },
                new SelectListItem { Value = "67", Text = "Urology" },
                new SelectListItem { Value = "68", Text = "Vascular Surgery" },
                new SelectListItem { Value = "69", Text = "Others" }
        };
                break;
        }
    }

    private async Task PopulateLists()
    {
        //SubCategoryList = new List<SelectListItem> {
        //        new SelectListItem { Value = "0", Text = "Diseases & Disorders of the Nervous System" },
        //        new SelectListItem { Value = "1", Text = "Diseases & Disorders of the Eye" },
        //        new SelectListItem { Value = "2", Text = "Diseases & Disorders of the Ear, Nose, Mouth & Throat" },
        //        new SelectListItem { Value = "3", Text = "Diseases & Disorders of the Respiratory System" },
        //        new SelectListItem { Value = "4", Text = "Diseases & Disorders of the Circulatory System" },
        //        new SelectListItem { Value = "5", Text = "Diseases & Disorders of the Digestive System" },
        //        new SelectListItem { Value = "6", Text = "Diseases & Disorders of the Hepatobiliary System & Pancreas" },
        //        new SelectListItem { Value = "7", Text = "Diseases & Disorders of the Musculoskeletal System & Connective Tissue" },
        //        new SelectListItem { Value = "8", Text = "Diseases & Disorders of the Skin, Subcutaneous Tissue & Breast" },
        //        new SelectListItem { Value = "9", Text = "Endocrine, Nutritional & Metabolic Diseases & Disorders" },

        //        new SelectListItem { Value = "10", Text = "Diseases & Disorders of the Kidney & Urinary Tract" },
        //        new SelectListItem { Value = "11", Text = "Diseases & Disorders of the Male Reproductive System" },
        //        new SelectListItem { Value = "12", Text = "Diseases & Disorders of the Female Reproductive System" },
        //        new SelectListItem { Value = "13", Text = "Pregnancy, Childbirth & the Puerperium" },
        //        new SelectListItem { Value = "14", Text = "Newborns & Other Neonates with Conditions Originating in Perinatal Period" },
        //        new SelectListItem { Value = "15", Text = "Diseases & Disorders of the Blood, Blood Forming Organs, Immunologic Disorders" },
        //        new SelectListItem { Value = "16", Text = "Myeloproliferative Diseases & Disorders, Poorly Differentiated Neoplasms" },
        //        new SelectListItem { Value = "17", Text = "Infectious & Parasitic Diseases, Systemic or Unspecified Sites" },
        //        new SelectListItem { Value = "18", Text = "Mental Diseases & Disorders" },
        //        new SelectListItem { Value = "19", Text = "Alcohol/Drug Use & Alcohol/Drug Induced Organic Mental Disorders" },

        //        new SelectListItem { Value = "20", Text = "Injuries, Poisonings & Toxic Effects of Drugs" },
        //        new SelectListItem { Value = "21", Text = "Burns" },
        //        new SelectListItem { Value = "22", Text = "Factors Influencing Health Status & Other Contacts with Health Services" },
        //        new SelectListItem { Value = "23", Text = "Multiple Significant Trauma" },
        //        new SelectListItem { Value = "24", Text = "Human Immunodeficiency Virus Infections" },
        //        new SelectListItem { Value = "25", Text = "Other" },

        //};

        await SwitchSubCategory(ParseCategoryValueFromSub(pCase.MedicalCategory));
        GenderList = new List<SelectListItem> {
                new SelectListItem { Value = "0", Text = "Male" },
                new SelectListItem { Value = "1", Text = "Female" },
                new SelectListItem { Value = "2", Text = "Neutral" }

        };

        RaceList = new List<SelectListItem> {
                new SelectListItem { Value = "0", Text = "American Indian or Alaska Native" },
                new SelectListItem { Value = "1", Text = "Asian" },
                new SelectListItem { Value = "2", Text = "Black or African American" },
                new SelectListItem { Value = "3", Text = "Native Hawaiian or Other Pacific Islander" },
                new SelectListItem { Value = "4", Text = "White" },

                new SelectListItem { Value = "5", Text = "Declined" },
                new SelectListItem { Value = "6", Text = "Unknown" },
                new SelectListItem { Value = "7", Text = "Other Race" }

            };

        EthnicityList = new List<SelectListItem> {
                new SelectListItem { Value = "0", Text = "Hispanic or Latino" },
                new SelectListItem { Value = "1", Text = "Not Hispanic or Latino" },
                new SelectListItem { Value = "2", Text = "Declined" },
                new SelectListItem { Value = "3", Text = "Unknown" }

            };
    }
    #endregion

    // PARSE CODE
    #region ParseCode
    private string ParseMedicalSpecialty(MedicalSpecialtyType MedicalSpecialty)
    {

        string medicalSpecialty = "";
        switch (MedicalSpecialty)
        {
            case MedicalSpecialtyType.Anesthesiology:
                medicalSpecialty = "Anesthesiology";
                break;
            case MedicalSpecialtyType.AnatomicPathologyAndClinicalPathology:
                medicalSpecialty = "Anatomic Pathology And Clinical Pathology";
                break;
            case MedicalSpecialtyType.ColonAndRectalSurgery:
                medicalSpecialty = "Colon And Rectal Surgery";
                break;
            case MedicalSpecialtyType.Dermatology:
                medicalSpecialty = "Dermatology";
                break;
            case MedicalSpecialtyType.EmergencyMedicine:
                medicalSpecialty = "Emergency Medicine";
                break;
            case MedicalSpecialtyType.FamilyMedicine:
                medicalSpecialty = "Family Medicine";
                break;
            case MedicalSpecialtyType.HospiceAndPalliativeMedicine:
                medicalSpecialty = "Hospice And Palliative Medicine";
                break;
            case MedicalSpecialtyType.InternalMedicine:
                medicalSpecialty = "Internal Medicine";
                break;
            case MedicalSpecialtyType.MedicalGenetics:
                medicalSpecialty = "Medical Genetics";
                break;
            case MedicalSpecialtyType.MedicalNuclearPhysics:
                medicalSpecialty = "Medical Nuclear Physics";
                break;
            case MedicalSpecialtyType.Neurology:
                medicalSpecialty = "Neurology";
                break;
            case MedicalSpecialtyType.Neurosurgery:
                medicalSpecialty = "Neurosurgery";
                break;
            case MedicalSpecialtyType.NuclearMedicine:
                medicalSpecialty = "NuclearMedicine";
                break;
            case MedicalSpecialtyType.ObstetricsAndGynecology:
                medicalSpecialty = "Obstetrics And Gynecology";
                break;
            case MedicalSpecialtyType.Ophthalmology:
                medicalSpecialty = "Ophthalmology";
                break;
            case MedicalSpecialtyType.OrthopedicSurgery:
                medicalSpecialty = "Orthopedic Surgery";
                break;
            case MedicalSpecialtyType.Otolaryngology:
                medicalSpecialty = "Otolaryngology";
                break;
            case MedicalSpecialtyType.Pediatrics:
                medicalSpecialty = "Pediatrics";
                break;
            case MedicalSpecialtyType.PhysicalMedicineAndRehibilitation:
                medicalSpecialty = "Physical Medicine And Rehibilitation";
                break;
            case MedicalSpecialtyType.PlasticSurgery:
                medicalSpecialty = "Plastic Surgery";
                break;
            case MedicalSpecialtyType.Psychiatry:
                medicalSpecialty = "Psychiatry";
                break;
            case MedicalSpecialtyType.PublicHealthAndGeneralPreventive:
                medicalSpecialty = "Public Health And General Preventive";
                break;
            case MedicalSpecialtyType.Radiology:
                medicalSpecialty = "Radiology";
                break;
            case MedicalSpecialtyType.Surgery:
                medicalSpecialty = "Surgery";
                break;
            case MedicalSpecialtyType.ThoracicSurgery:
                medicalSpecialty = "Thoracic Surgery";
                break;
            case MedicalSpecialtyType.Urology:
                medicalSpecialty = "Urology";
                break;
            case MedicalSpecialtyType.VascularSurgery:
                medicalSpecialty = "Vascular Surgery";
                break;
            default:
                break;
        }
        return medicalSpecialty;
    }
    private string ParseCategory(int category)
    {
        string rValue = "";
        switch (category)
        {
            case 1:
                rValue = "Medicine";
                break;
            case 2:
                rValue = "Surgery";
                break;
            default:
                rValue = "Diagnostics";
                break;
        }
        return rValue;
    }
    private string ParseCategoryFromSub(int subCategory)
    {
        string rValue = "";


        if (subCategory < 26)
        {
            rValue = "Diagnostics";
        }
        else if (subCategory < 55)
        {
            rValue = "Medicine";
        }
        else
        {
            rValue = "Surgery";
        }
        return rValue;
    }
    private string ParseCategoryValueFromSub(int subCategory)
    {
        string rValue = "";


        if (subCategory < 26)
        {
            rValue = "0";
        }
        else if (subCategory < 55)
        {
            rValue = "1";
        }
        else
        {
            rValue = "2";
        }
        return rValue;
    }
    private string ParseSubCategory(int subCategory)
    {

        string rValue = "";
        switch (subCategory)
        {
            case 0:
                rValue = "Diseases & Disorders of the Nervous System";
                break;
            case 1:
                rValue = "Diseases & Disorders of the Eye";
                break;
            case 2:
                rValue = "Diseases & Disorders of the Ear, Nose, Mouth & Throat";
                break;
            case 3:
                rValue = "Diseases & Disorders of the Respiratory System";
                break;
            case 4:
                rValue = "Diseases & Disorders of the Circulatory System";
                break;
            case 5:
                rValue = "Diseases & Disorders of the Digestive System";
                break;
            case 6:
                rValue = "Diseases & Disorders of the Hepatobiliary System & Pancreas";
                break;
            case 7:
                rValue = "Diseases & Disorders of the Musculoskeletal System & Connective Tissue";
                break;
            case 8:
                rValue = "Diseases & Disorders of the Skin, Subcutaneous Tissue & Breast";
                break;
            case 9:
                rValue = "Endocrine, Nutritional & Metabolic Diseases & Disorders";
                break;

            case 10:
                rValue = "Diseases & Disorders of the Kidney & Urinary Tract";
                break;
            case 11:
                rValue = "Diseases & Disorders of the Male Reproductive System";
                break;
            case 12:
                rValue = "Diseases & Disorders of the Female Reproductive System";
                break;
            case 13:
                rValue = "Pregnancy, Childbirth & the Puerperium";
                break;
            case 14:
                rValue = "Newborns & Other Neonates with Conditions Originating in Perinatal Period";
                break;
            case 15:
                rValue = "Diseases & Disorders of the Blood, Blood Forming Organs, Immunologic Disorders";
                break;
            case 16:
                rValue = "Myeloproliferative Diseases & Disorders, Poorly Differentiated Neoplasms";
                break;
            case 17:
                rValue = "Infectious & Parasitic Diseases, Systemic or Unspecified Sites";
                break;
            case 18:
                rValue = "Mental Diseases & Disorders";
                break;
            case 19:
                rValue = "Alcohol/Drug Use & Alcohol/Drug Induced Organic Mental Disorders";
                break;

            case 20:
                rValue = "Injuries, Poisonings & Toxic Effects of Drugs";
                break;
            case 21:
                rValue = "Burns";
                break;
            case 22:
                rValue = "Factors Influencing Health Status & Other Contacts with Health Services";
                break;
            case 23:
                rValue = "Multiple Significant Trauma";
                break;
            case 24:
                rValue = "Human Immunodeficiency Virus Infections";
                break;
            case 25:
                rValue = "Others";
                break;
            case 26:
                rValue = "Allegy and Immunology";
                break;
            case 27:
                rValue = "Anesthesiology";
                break;
            case 28:
                rValue = "Colon and Rectal Surgery";
                break;
            case 29:
                rValue = "Dermatology";
                break;

            case 30:
                rValue = "Emergency Medicine";
                break;
            case 31:
                rValue = "Family Medicine";
                break;
            case 32:
                rValue = "Internal Medicine";
                break;
            case 33:
                rValue = "Medical Genetics";
                break;
            case 34:
                rValue = "Neurology";
                break;
            case 35:
                rValue = "Neurosurgery";
                break;
            case 36:
                rValue = "Nuclear Medicine";
                break;
            case 37:
                rValue = "Obstetrics and Gynecology";
                break;
            case 38:
                rValue = "Ophthalmology";
                break;
            case 39:
                rValue = "OrthopedicSurgery";
                break;

            case 40:
                rValue = "Otolaryngology";
                break;
            case 41:
                rValue = "Anatomic Pathology and Clinical Pathology";
                break;
            case 42:
                rValue = "Pediatrics";
                break;
            case 43:
                rValue = "Physical Medicine and Rehibilitation";
                break;
            case 44:
                rValue = "Plastic Surgery";
                break;
            case 45:
                rValue = "Public Health and General Preventive";
                break;
            case 46:
                rValue = "Psychiatry";
                break;
            case 47:
                rValue = "Radiology";
                break;
            case 48:
                rValue = "Hospice and Palliative Medicine";
                break;
            case 49:
                rValue = "Medical Nuclear Physics";
                break;

            case 50:
                rValue = "Surgery";
                break;
            case 51:
                rValue = "Vascular Surgery";
                break;
            case 52:
                rValue = "Thoracic Surgery";
                break;
            case 53:
                rValue = "Urology";
                break;
            case 54:
                rValue = "Others";
                break;
            case 55:
                rValue = "General Surgery";
                break;
            case 56:
                rValue = "Thoracic Surgery";
                break;
            case 57:
                rValue = "Colon and Rectal Surgery";
                break;
            case 58:
                rValue = "Obstetrics and Gynecology";
                break;
            case 59:
                rValue = "Gynecologic Oncology";
                break;

            case 60:
                rValue = "Neurological Surgery";
                break;
            case 61:
                rValue = "Ophthalmic Surgery";
                break;
            case 62:
                rValue = "Oral and Maxillofacial Surgery";
                break;
            case 63:
                rValue = "Orthopaedic Surgery";
                break;
            case 64:
                rValue = "Otolaryngology";
                break;
            case 65:
                rValue = "Pediatric Surgery";
                break;
            case 66:
                rValue = "Plastic and Maxillofacial Surgery";
                break;
            case 67:
                rValue = "Urology";
                break;
            case 68:
                rValue = "Vascular Surgery";
                break;
            case 69:
                rValue = "Others";
                break;

            default:
                // shouldn't get here
                rValue = "";
                break;
        }


        return rValue;
    }
    private string ParseRace(int race)
    {
        string rValue = "";
        switch (race)
        {
            case 1:
                rValue = "Asian";
                break;
            case 2:
                rValue = "Black or African American";
                break;
            case 3:
                rValue = "Native Hawaiian or Other Pacific Islander";
                break;
            case 4:
                rValue = "White";
                break;
            case 5:
                rValue = "Declined";
                break;
            case 6:
                rValue = "Unknown";
                break;
            case 7:
                rValue = "Other Race";
                break;
            default:
                rValue = "American Indian or Alaska Native";
                break;
        }


        return rValue;
    }
    private string ParseEthnicity(int ethnicity)
    {
        string rValue = "";
        switch (ethnicity)
        {
            case 1:
                rValue = "Not Hispanic or Latino";
                break;
            case 2:
                rValue = "Declined";
                break;
            case 3:
                rValue = "Unknown";
                break;
            default:
                rValue = "Hispanic or Latino";
                break;
        }


        return rValue;
    }
    private string ParseGender(int gender)
    {
        string rValue = "";
        switch (gender)
        {
            case 1:
                rValue = "Female";
                break;
            case 2:
                rValue = "Neutral";
                break;
            default:
                rValue = "Male";
                break;
        }


        return rValue;
    }
    private string ParsePriority(int priority)
    {
        string rValue = "";
        switch (priority)
        {
            case 1:
                rValue = "Over Coffee";
                break;
            case 2:
                rValue = "Low";
                break;
            default:
                rValue = "Stat";
                break;
        }


        return rValue;
    }
    private string ParseStatus(bool tStatus)
    {
        if (tStatus)
        {
            return "Open";
        }
        else
        {
            return "Closed";
        }
    }
    #endregion

}
