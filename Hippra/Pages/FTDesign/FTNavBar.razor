@using Hippra.Models.SQL
@using Hippra.Models.POCO
@using Hippra.Services
@using Hippra.Pages.FTDesign.Features
@using Hippra.Models.Enums
@using Microsoft.AspNetCore.Identity
@using Microsoft.Extensions.Options
@using System.Security.Claims
@*@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager*@
@inject IOptions<AppSettings> settings
@inject HippraService hService
@inject ProfileService pService
@inject IJSRuntime JSRuntime
@inject Microsoft.AspNetCore.Components.NavigationManager  NavigationManager
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

<nav class="navbar navbar-expand @NavCssClass navbar-light @NavbarCustomCssClass box-shadow py-2">
    <div class="container-fluid nav-pady">
        @if (HasNavBrand)
        {
            if (ISDemoMode)
            {
                <a class="navbar-brand ft-nav-brand-container" href="/">
                    <i class="ms-Icon ms-Icon--Rocket @TextColorCustomCssClass mr-2" aria-hidden="true"></i>
                    <div class="flex-grow-1 @TextColorCustomCssClass ">
                        <span class="ms-fontWeight-regular ms-fontSize-24">  FTDesign</span>
                    </div>

                </a>
            }
            else
            {
                // customization
                <a class="navbar-brand ft-nav-brand-container" href="/">
                    <img src="/img/hippra/Hippra_logo_imgtext.png" @TextColorCustomCssClass width="100" height="40" />

                    <br />
                </a>

                /* <a href="/About" class="btn my-1 btn-outline"> About </a>
                 <a href="https://docs.google.com/forms/d/1ik_NYNBlVAsAK1LwQYJ0gZn-im1Z_oCdJbhuQ9jwMAo/edit?usp=sharing" class="btn my-1 btn-outline"> Survey </a>*/
                <a href="https://jrmwriter.wordpress.com" class="btn my-1 btn-outline"> Blog </a>

            }

        }
        <ul class="navbar-nav flex-grow-1">
            @if (ISDemoMode)
            {
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle @TextColorCustomCssClass" href="#" id="navbarDropdownMenuLink" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Pages
                    </a>
                    <div class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
                        <a class="dropdown-item" href="/#">Create New Post</a>
                        <a class="dropdown-item" href="/#">Generate Reports</a>
                        <a class="dropdown-item" href="/#">Manage Orders</a>
                        <div class="dropdown-divider"></div>
                        <a class="dropdown-item" href="/#">Customer Feedbacks</a>
                        <a class="dropdown-item" href="/#">Register Member</a>

                    </div>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link @TextColorCustomCssClass" href="#" id="navbarDropdownMenuLink" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        No Arrow
                    </a>
                    <div class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
                        <a class="dropdown-item" href="/#">Create New Post</a>
                        <a class="dropdown-item" href="/#">Generate Reports</a>
                        <a class="dropdown-item" href="/#">Manage Orders</a>
                        <div class="dropdown-divider"></div>
                        <a class="dropdown-item" href="/#">Customer Feedbacks</a>
                        <a class="dropdown-item" href="/#">Register Member</a>

                    </div>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link @TextColorCustomCssClass" href="#" id="navbarDropdownMenuLink" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Reports
                    </a>
                    <div class="dropdown-menu p-4" aria-labelledby="navbarDropdownMenuLink" style="width: 900px;">
                        <div class="row">
                            <div class="col ">

                                <h6 class="dropdown-header">Financial Reports</h6>
                                <a class="dropdown-item" href="#"><i class="ms-Icon ms-Icon--Financial" aria-hidden="true"></i> Annual Report</a>
                                <a class="dropdown-item" href="#"><i class="ms-Icon ms-Icon--People" aria-hidden="true"></i> HR Report</a>
                                <a class="dropdown-item" href="#"><i class="ms-Icon ms-Icon--CheckList" aria-hidden="true"></i> IPO Report</a>
                                <a class="dropdown-item" href="#"><i class="ms-Icon ms-Icon--Chart" aria-hidden="true"></i> Finance Margins</a>
                                <a class="dropdown-item" href="#"><i class="ms-Icon ms-Icon--BarChart4" aria-hidden="true"></i> Revenue Report</a>
                            </div>
                            <div class="col " style="border-left:solid;border-width:thin;border-left-color:lightgray;">
                                <h6 class="dropdown-header">Project Reports</h6>
                                <a class="dropdown-item" href="#">- ERTW Life</a>
                                <a class="dropdown-item" href="#">- FTDesign</a>
                                <a class="dropdown-item" href="#">- FT Consulting</a>
                            </div>
                            <div class="col " style="border-left:solid;border-width:thin;border-left-color:lightgray;">
                                <h6 class="dropdown-header">HR Reports</h6>
                                <a class="dropdown-item" href="#">· Staff Directory</a>
                                <a class="dropdown-item" href="#">· Client Directory</a>
                                <a class="dropdown-item" href="#">· Salary Report</a>
                                <a class="dropdown-item" href="#">· Staff Payslips</a>
                                <a class="dropdown-item" href="#">· Corporate Expenses</a>
                                <a class="dropdown-item" href="#">· Project Expenses</a>
                            </div>
                            <div class="col " style="border-left:solid;border-width:thin;border-left-color:lightgray;">
                                <h6 class="dropdown-header">Reporting Apps</h6>
                                <a class="dropdown-item" href="#">Report Adjustments</a>
                                <a class="dropdown-item" href="#">Report Settings</a>
                                <a class="dropdown-item" href="#">Conversions</a>
                                <a class="dropdown-item" href="#">Report Flow</a>
                                <a class="dropdown-item" href="#">Audit & Logs</a>
                            </div>
                        </div>




                    </div>
                </li>
                <li class="nav-item">
                    <a class="nav-link @TextColorCustomCssClass" href="/#">Link</a>
                </li>
            }
            else
            {
                //customization


                @*<li class="nav-item d-none d-sm-block">
                        <a class="nav-link @TextColorCustomCssClass" href="/About">About</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link @TextColorCustomCssClass" href="/FTContact">Contact Us</a>
                    </li>*@
            }

        </ul>

        <div class="navbar-nav flex-row">
            @if (HasTopControls)
            {
                if (ISDemoMode)
                {
                    <FTLoginDisplay HasNotification="true" HasQuickAction="true" HasSearchBar="true" HasContactsPanel="true" />
                }
                else
                {
                    <FTLoginDisplay HasContactsPanel="true" />
                    //customization
                    @if (userId != -1)
                    {
                        @if (unreadNotification > 0 && unreadNotification <= 99)
                        {
                            <button class="nav-btn" @onclick="@viewNotificationPage"><span class="far fa-bell"></span></button><span class="counter counter-lg notif-label">@unreadNotification</span>
                        }
                        else if (unreadNotification > 99)
                        {
                            <button class="nav-btn" @onclick="@viewNotificationPage"><span class="far fa-bell"></span></button><span class="counter counter-lg notif-label">99+</span>
                        }
                        else
                        {
                            <button class="nav-btn" @onclick="@viewNotificationPage"><span class="far fa-bell"></span></button>
                        }

                        <button class="circle-pic-personal circle-badge" style="background-image:url('@DisplayProfileUrl') ;background-size: 100%; margin-left: 10px" @onclick="(e => { viewPage(userId); })"></button>
                    }

                }

            }


        </div>
    </div>
</nav>

@code {
    [Parameter]
    public bool IsFixTop { get; set; } = true;
    [Parameter]
    public bool HasTopControls { get; set; } = true;
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    private AuthenticationState authState { get; set; }
    private ClaimsPrincipal user { get; set; }
    private AppUser usr { get; set; }
    private Profile profile { get; set; } = new Profile();

    // customization
    private string NavCssClass { get; set; } = "";
    private bool HasNavBrand { get; set; } = true;

    [CascadingParameter(Name = "DEMO_MODE")]
    public bool ISDemoMode { get; set; }

    [CascadingParameter(Name = "FT_THEME")]
    public ThemeOption themeOption { get; set; } = ThemeOption.LIGHT;
    private string BtnCustomCssClass { get; set; } = "";
    private string TextColorCustomCssClass { get; set; } = "";
    private string NavbarCustomCssClass { get; set; } = "";
    private string DisplayProfileUrl = "";
    private int userId = -1;
    private int unreadNotification = 0;

    protected override async Task OnInitializedAsync()
    {
        authState = await authenticationStateTask;
        user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            @*usr = await UserManager.GetUserAsync(user);
            if (usr != null)
            {
                profile = new Profile();
                profile = await pService.GetProfile(usr.PublicId);
                if (profile.ProfileUrl != null)
                {
                    DisplayProfileUrl = profile.ProfileUrl;
                }
                else
                {
                    DisplayProfileUrl = "/img/hippra/blank-profile.png";
                }
                userId = profile.PublicId;
            }*@
        }
        if (IsFixTop)
        {
            NavCssClass = "sticky-top";
        }
        switch (themeOption)
        {
            case ThemeOption.LIGHT:
                BtnCustomCssClass = "btn-light";
                TextColorCustomCssClass = "text-dark";
                NavbarCustomCssClass = "navbar-light bg-light";
                break;
            case ThemeOption.FT_LIGHT:
                BtnCustomCssClass = "ft-btn-light";
                TextColorCustomCssClass = "text-dark";
                NavbarCustomCssClass = "ft-navbar-light  ft-bg-light";
                break;
            case ThemeOption.FT_DARK:
                BtnCustomCssClass = "ft-btn-dark";
                TextColorCustomCssClass = "text-white";
                NavbarCustomCssClass = "ft-navbar-light  ft-bg-dark";
                break;
            default:
            case ThemeOption.DARK:
                BtnCustomCssClass = "btn-dark";
                TextColorCustomCssClass = "text-white";
                NavbarCustomCssClass = "navbar-dark bg-dark";
                break;
        }
        @*await updateNotification();*@


    }
    private async Task viewPage(int id)
    {
        @*NavigationManager.NavigateTo("/");
        NavigationManager.NavigateTo("/PersonalPage/" + id);*@
        NavigationManager.NavigateTo("/PersonalPage/-1");

    }
    private async Task viewNotificationPage()
    {
        NavigationManager.NavigateTo("/FTProfile/" + -1 +"/"+ 2);

    }
    public async Task updateNotification()
    {
        unreadNotification = await hService.CountMyNotification(userId);
        StateHasChanged();
    }
}
