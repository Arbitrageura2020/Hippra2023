

    <div class="@SidebarCssClass @SidebarCustomCssClass ">
        <div class="ft-top-row">
            <FTSidebarHeader ToggleMode="ToggleMode" IsMinMode="IsMinMode" />
        </div>
        <div class="flex-grow-1 ft-sidebar-main">
            <FTSidebarMain IsMinMode="IsMinMode" />
        </div>
        <div class="ft-bottom-row">

            @if (!IsMinMode)
            {
                <FTSidebarFooter/>
            }
            else
            {
                <FTSidebarFooter IsMinimized=true />
            }

        </div>

    </div>



@code {

    [CascadingParameter(Name="FT_THEME")]
    public ThemeOption themeOption { get; set; } = ThemeOption.LIGHT;

    private bool IsMinMode { get; set; } = false;
    private string SidebarCssClass { get; set; } = "ft-sidebar";
    private string SidebarCustomCssClass { get; set; } = "";

    protected override async Task OnInitializedAsync()
    {
        switch (themeOption)
        {
            case ThemeOption.LIGHT:
                SidebarCustomCssClass = "bg-light";
                break;
            case ThemeOption.FT_LIGHT:
                SidebarCustomCssClass  = "ft-bg-light";
                break;
            case ThemeOption.FT_DARK:
                SidebarCustomCssClass = "ft-bg-dark";
                break;
            default:
            case ThemeOption.DARK:
                SidebarCustomCssClass = "bg-dark";
                break;
        }


    }



    private async Task ToggleMode()
    {
        IsMinMode = !IsMinMode;
        if (!IsMinMode)
        {
            SidebarCssClass = "ft-sidebar";
        }
        else
        {
            SidebarCssClass = "ft-sidebar-min";
        }
        this.StateHasChanged();

    }
}
