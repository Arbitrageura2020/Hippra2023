

<FTLayer>
    <div class="@dialogType" style="@StyleOverride">
        <div class="dialog-title d-flex align-content-center justify-content-between">
            <h4 class="my-0 mx-2">@title</h4>
        </div>
        <div class="dialog-body">
            @ChildContent
            <br />
            <div class="mx-2 row">
                <div class="col-md-6">
                    @if (@LeftBtn != "")
                    {
                        <button class="btn btn-danger btn-sm btn-block" @onclick="(()=>DialogResultCb.InvokeAsync(true))">@LeftBtn</button>
                    }

                </div>
                <div class="col-md-6">
                    @if (@RightBtn != "")
                    {
                        <button class="btn btn-primary btn-sm btn-block" @onclick="(()=>DialogResultCb.InvokeAsync(false))">@RightBtn</button>
                    }

                </div>
            </div>
            <br />
        </div>
    </div>
</FTLayer>

@code {

    [Parameter]
    public EventCallback<bool> DialogResultCb { get; set; }
    [Parameter]
    public string LeftBtn { get; set; } = "Yes";
    [Parameter]
    public string RightBtn { get; set; } = "No";

    [Parameter]
    public string title { get; set; } = "";
    [Parameter]
    public DialogType DialogType { get; set; } = DialogType.CENTER;
    [Parameter]
    public string StyleOverride { get; set; } = "";
    [Parameter]
    public RenderFragment ChildContent { get; set; }

    private string dialogType { get; set; }

    protected override async Task OnInitializedAsync()
    {
        switch (DialogType)
        {
            case DialogType.FULLWINDOW:
                dialogType = "ft-full-window ";
                break;
            case DialogType.FULLWINDOWCORNERED:
                dialogType = "ft-full-window-cornered";
                break;
            case DialogType.TOPLEFT:
                dialogType = "ft-dialog-top-left";
                break;
            case DialogType.TOPCENTER:
                dialogType = "ft-dialog-top-center";
                break;
            case DialogType.TOPRIGHT:
                dialogType = "ft-dialog-top-right";
                break;
            case DialogType.MIDLEFT:
                dialogType = "ft-dialog-mid-left";
                break;
            case DialogType.MIDRIGHT:
                dialogType = "ft-dialog-mid-right";
                break;
            case DialogType.BOTTOMLEFT:
                dialogType = "ft-dialog-bottom-left";
                break;
            case DialogType.BOTTOMCENTER:
                dialogType = "ft-dialog-bottom-center";
                break;
            case DialogType.BOTTOMRIGHT:
                dialogType = "ft-dialog-bottom-right";
                break;
            case DialogType.CENTER:
            default:
                dialogType = "ft-dialog";
                break;
        }
    }

}
